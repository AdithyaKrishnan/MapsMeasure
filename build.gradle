buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        if (rootProject.ext.has("gradle_classpath")) {
            classpath rootProject.ext.gradle_classpath
        } else {
            logger.warn('classpath not found in rootProject')
            classpath 'com.android.tools.build:gradle:1.2.3'
        }
    }
}

apply plugin: 'com.android.application'

android {

    if (rootProject.ext.has("compileSdkVersion")) {
        compileSdkVersion rootProject.ext.compileSdkVersion
        buildToolsVersion rootProject.ext.buildToolsVersion
    } else {
        logger.warn('compileSdkVersion not found in rootProject')
        compileSdkVersion 22
        buildToolsVersion "23.0.0 rc3"
    }

    defaultConfig {
        applicationId "de.j4velin.mapsmeasure"
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            zipAlignEnabled true
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
        debug {
            signingConfig signingConfigs.release
            zipAlignEnabled true
            minifyEnabled false
            shrinkResources false
            debuggable true
        }
    }
}

repositories {
    jcenter()
}

dependencies {
    compile 'com.android.support:support-v4:23.1.0'
    compile 'com.google.android.gms:play-services-location:8.1.0'
    compile 'com.google.android.gms:play-services-maps:8.1.0'
}

def props = new Properties()

props.load(new FileInputStream(project.file("key.properties")))

android.signingConfigs.release.storeFile project.file(props.keyStore)

android.signingConfigs.release.storePassword props.keyStorePassword

android.signingConfigs.release.keyAlias props.keyAlias

android.signingConfigs.release.keyPassword props.keyAliasPassword
